/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  VolcanoCoin,
  VolcanoCoinInterface,
} from "../../contracts/VolcanoCoin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "availableAmount",
        type: "uint256",
      },
    ],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "changer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSupply",
        type: "uint256",
      },
    ],
    name: "SupplyChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increaseTotalSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "payments",
    outputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "paymentsByAddress",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct VolcanoCoin.Payment[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405261271060015534801561001657600080fd5b5061003361002861008b60201b60201c565b61009360201b60201c565b6001546002600061004861015760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610180565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610d2e8061018f6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063ab63385c11610066578063ab63385c14610120578063b7760c8f14610151578063c4e41b221461016d578063de0f2be11461018b578063f2fde38b1461019557610093565b806308421e7f1461009857806327e235e3146100c8578063715018a6146100f85780638da5cb5b14610102575b600080fd5b6100b260048036038101906100ad91906108ab565b6101b1565b6040516100bf91906109de565b60405180910390f35b6100e260048036038101906100dd91906108ab565b6102af565b6040516100ef9190610a0f565b60405180910390f35b6101006102c7565b005b61010a6102db565b6040516101179190610a39565b60405180910390f35b61013a60048036038101906101359190610a80565b610304565b604051610148929190610ac0565b60405180910390f35b61016b60048036038101906101669190610ae9565b610365565b005b610175610511565b6040516101829190610a0f565b60405180910390f35b61019361051b565b005b6101af60048036038101906101aa91906108ab565b610590565b005b6060600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156102a457838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505081526020019060010190610212565b505050509050919050565b60026020528060005260406000206000915090505481565b6102cf610613565b6102d96000610691565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6003602052816000526040600020818154811061032057600080fd5b9060005260206000209060020201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156103f05782816040517f03eb8b540000000000000000000000000000000000000000000000000000000081526004016103e7929190610b29565b60405180910390fd5b82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461043f9190610b81565b9250508190555082600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104959190610bb5565b925050819055506104a7338385610755565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516105049190610a0f565b60405180910390a3505050565b6000600154905090565b610523610613565b6103e8600160008282546105379190610bb5565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f50febc49bead4837d411278852c281f9e521d4aee3ef162aabf9f4527bd7941d6001546040516105869190610a0f565b60405180910390a2565b610598610613565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe90610c6c565b60405180910390fd5b61061081610691565b50565b61061b610840565b73ffffffffffffffffffffffffffffffffffffffff166106396102db565b73ffffffffffffffffffffffffffffffffffffffff161461068f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068690610cd8565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050505050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108788261084d565b9050919050565b6108888161086d565b811461089357600080fd5b50565b6000813590506108a58161087f565b92915050565b6000602082840312156108c1576108c0610848565b5b60006108cf84828501610896565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61090d8161086d565b82525050565b6000819050919050565b61092681610913565b82525050565b6040820160008201516109426000850182610904565b506020820151610955602085018261091d565b50505050565b6000610967838361092c565b60408301905092915050565b6000602082019050919050565b600061098b826108d8565b61099581856108e3565b93506109a0836108f4565b8060005b838110156109d15781516109b8888261095b565b97506109c383610973565b9250506001810190506109a4565b5085935050505092915050565b600060208201905081810360008301526109f88184610980565b905092915050565b610a0981610913565b82525050565b6000602082019050610a246000830184610a00565b92915050565b610a338161086d565b82525050565b6000602082019050610a4e6000830184610a2a565b92915050565b610a5d81610913565b8114610a6857600080fd5b50565b600081359050610a7a81610a54565b92915050565b60008060408385031215610a9757610a96610848565b5b6000610aa585828601610896565b9250506020610ab685828601610a6b565b9150509250929050565b6000604082019050610ad56000830185610a2a565b610ae26020830184610a00565b9392505050565b60008060408385031215610b0057610aff610848565b5b6000610b0e85828601610a6b565b9250506020610b1f85828601610896565b9150509250929050565b6000604082019050610b3e6000830185610a00565b610b4b6020830184610a00565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b8c82610913565b9150610b9783610913565b9250828203905081811115610baf57610bae610b52565b5b92915050565b6000610bc082610913565b9150610bcb83610913565b9250828201905080821115610be357610be2610b52565b5b92915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c56602683610be9565b9150610c6182610bfa565b604082019050919050565b60006020820190508181036000830152610c8581610c49565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610cc2602083610be9565b9150610ccd82610c8c565b602082019050919050565b60006020820190508181036000830152610cf181610cb5565b905091905056fea2646970667358221220725feee4f8c213048e98a8bae73e2443598e17e4d80e9b863b2fddb8654d0c0e64736f6c63430008110033";

type VolcanoCoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VolcanoCoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VolcanoCoin__factory extends ContractFactory {
  constructor(...args: VolcanoCoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VolcanoCoin> {
    return super.deploy(overrides || {}) as Promise<VolcanoCoin>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VolcanoCoin {
    return super.attach(address) as VolcanoCoin;
  }
  override connect(signer: Signer): VolcanoCoin__factory {
    return super.connect(signer) as VolcanoCoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VolcanoCoinInterface {
    return new utils.Interface(_abi) as VolcanoCoinInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VolcanoCoin {
    return new Contract(address, _abi, signerOrProvider) as VolcanoCoin;
  }
}
